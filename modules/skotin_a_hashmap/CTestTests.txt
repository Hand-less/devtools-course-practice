#############################################
##### Testing HashMap Application
#############################################

set(prefix "${MODULE}")

# Test to ensure the application prompts for correct usage when run with no or insufficient arguments
add_test(
    NAME ${prefix}_run
    COMMAND ${APPLICATION}
)
set_tests_properties(${prefix}_run PROPERTIES
    PASS_REGULAR_EXPRESSION "Usage:"
    LABELS "${MODULE}"
)

# Test to check if insert command works correctly
add_test(
    NAME ${prefix}_run_insert
    COMMAND ${APPLICATION} "insert" "key" "value"
)
set_tests_properties(${prefix}_run_insert PROPERTIES
    PASS_REGULAR_EXPRESSION "Inserted \\[key\\] = value"
    LABELS "${MODULE}"
)

# Test to handle the scenario when key is not found during find
add_test(
    NAME ${prefix}_error_find
    COMMAND ${APPLICATION} "find" "non_existing_key" "val"
)
set_tests_properties(${prefix}_error_find PROPERTIES
    PASS_REGULAR_EXPRESSION "Error: Key not found"
    LABELS "${MODULE}"
)

# Test to handle the scenario when key is not found during remove
add_test(
    NAME ${prefix}_error_remove
    COMMAND ${APPLICATION} "remove" "non_existing_key" "val"
)
set_tests_properties(${prefix}_error_remove PROPERTIES
    PASS_REGULAR_EXPRESSION "Error: Key not found"
    LABELS "${MODULE}"
)

# Test to ensure the clear command works correctly
add_test(
    NAME ${prefix}_run_clear
    COMMAND ${APPLICATION} "clear"
)
set_tests_properties(${prefix}_run_clear PROPERTIES
    PASS_REGULAR_EXPRESSION "Array cleared"
    LABELS "${MODULE}"
)

# Test to check for invalid commands
add_test(
    NAME ${prefix}_invalid_command
    COMMAND ${APPLICATION} "some" "key" "value"
)
set_tests_properties(${prefix}_invalid_command PROPERTIES
    PASS_REGULAR_EXPRESSION "Invalid command"
    LABELS "${MODULE}"
)
